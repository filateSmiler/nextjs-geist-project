{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/api/order/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\n\n// In-memory storage for demo purposes\n// In production, this would be replaced with a database\nlet orders: Order[] = [];\n\ninterface OrderItem {\n  item: string;\n  qty: number;\n  price: number;\n}\n\ninterface Order {\n  id: string;\n  table_id: string;\n  order: OrderItem[];\n  special_instructions?: string;\n  status: 'pending' | 'preparing' | 'ready' | 'served';\n  timestamp: string;\n  total: number;\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n    \n    // Validate required fields\n    if (!body.table_id || !body.order || !Array.isArray(body.order)) {\n      return NextResponse.json(\n        { error: 'Missing required fields: table_id and order array' },\n        { status: 400 }\n      );\n    }\n\n    // Validate order items\n    for (const item of body.order) {\n      if (!item.item || typeof item.qty !== 'number' || item.qty <= 0) {\n        return NextResponse.json(\n          { error: 'Invalid order item format' },\n          { status: 400 }\n        );\n      }\n    }\n\n    // Calculate total\n    const total = body.order.reduce((sum: number, item: OrderItem) => sum + (item.price * item.qty), 0);\n\n    // Create new order\n    const newOrder: Order = {\n      id: `order_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      table_id: body.table_id,\n      order: body.order,\n      special_instructions: body.special_instructions || '',\n      status: 'pending',\n      timestamp: new Date().toISOString(),\n      total: total\n    };\n\n    // Add to orders array\n    orders.push(newOrder);\n\n    return NextResponse.json({\n      success: true,\n      order_id: newOrder.id,\n      message: 'Order placed successfully'\n    }, { status: 201 });\n\n  } catch (error) {\n    console.error('Error processing order:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function GET() {\n  try {\n    // Sort orders by timestamp (newest first)\n    const sortedOrders = orders.sort((a, b) => \n      new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\n    );\n\n    return NextResponse.json({\n      orders: sortedOrders,\n      count: orders.length\n    });\n\n  } catch (error) {\n    console.error('Error fetching orders:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n\nexport async function PATCH(request: NextRequest) {\n  try {\n    const body = await request.json();\n    \n    if (!body.order_id || !body.status) {\n      return NextResponse.json(\n        { error: 'Missing required fields: order_id and status' },\n        { status: 400 }\n      );\n    }\n\n    const validStatuses = ['pending', 'preparing', 'ready', 'served'];\n    if (!validStatuses.includes(body.status)) {\n      return NextResponse.json(\n        { error: 'Invalid status. Must be one of: ' + validStatuses.join(', ') },\n        { status: 400 }\n      );\n    }\n\n    // Find and update order\n    const orderIndex = orders.findIndex(order => order.id === body.order_id);\n    if (orderIndex === -1) {\n      return NextResponse.json(\n        { error: 'Order not found' },\n        { status: 404 }\n      );\n    }\n\n    orders[orderIndex].status = body.status;\n\n    return NextResponse.json({\n      success: true,\n      message: 'Order status updated successfully',\n      order: orders[orderIndex]\n    });\n\n  } catch (error) {\n    console.error('Error updating order:', error);\n    return NextResponse.json(\n      { error: 'Internal server error' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}